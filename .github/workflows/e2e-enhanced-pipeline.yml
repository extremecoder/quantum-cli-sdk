name: Quantum Application Complete Enhanced E2E Pipeline

on:
  push:
    branches: [main, master]
    paths:
      - 'source/circuits/**'
      - '.github/workflows/e2e-pipeline-enhanced.yml'
  pull_request:
    branches: [main, master]
    paths:
      - 'source/circuits/**'
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      source_files: ${{ steps.find-files.outputs.files }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - run: pip install quantum-cli-sdk -r requirements.txt
      - id: find-files
        run: |
          FILES=$(find source/circuits -name '*.py' | jq -R -s -c 'split("\n") | map(select(length > 0))')
          echo "files=$FILES" >> $GITHUB_OUTPUT

  ir-generation:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        source_file: ${{ fromJson(needs.setup.outputs.source_files) }}
    steps:
      - uses: actions/checkout@v4
      - run: pip install quantum-cli-sdk
      - run: mkdir -p ir/openqasm
      - run: quantum-cli ir generate --source source/circuits/${{ matrix.source_file }} --dest ir/openqasm/${{ matrix.source_file }}.qasm

  validation:
    needs: ir-generation
    runs-on: ubuntu-latest
    strategy:
      matrix:
        source_file: ${{ fromJson(needs.setup.outputs.source_files) }}
    steps:
      - uses: actions/checkout@v4
      - run: pip install quantum-cli-sdk
      - run: mkdir -p results/validation
      - run: quantum-cli ir validate ir/openqasm/${{ matrix.source_file }}.qasm --output results/validation/${{ matrix.source_file }}.json

  security-scan:
    needs: validation
    runs-on: ubuntu-latest
    strategy:
      matrix:
        source_file: ${{ fromJson(needs.setup.outputs.source_files) }}
    steps:
      - uses: actions/checkout@v4
      - run: pip install quantum-cli-sdk
      - run: mkdir -p results/security
      - run: quantum-cli security scan ir/openqasm/${{ matrix.source_file }}.qasm --output results/security/${{ matrix.source_file }}.json

  optimization:
    needs: security-scan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        source_file: ${{ fromJson(needs.setup.outputs.source_files) }}
    steps:
      - uses: actions/checkout@v4
      - run: pip install quantum-cli-sdk
      - run: mkdir -p ir/openqasm/optimized
      - run: quantum-cli ir optimize ir/openqasm/${{ matrix.source_file }}.qasm --output ir/openqasm/optimized/${{ matrix.source_file }}.qasm

  hardware-adaptation:
    needs: optimization
    runs-on: ubuntu-latest
    strategy:
      matrix:
        source_file: ${{ fromJson(needs.setup.outputs.source_files) }}
    steps:
      - uses: actions/checkout@v4
      - run: pip install quantum-cli-sdk
      - run: mkdir -p ir/openqasm/adapted
      - run: quantum-cli ir adapt ir/openqasm/optimized/${{ matrix.source_file }}.qasm --hardware ibm --output ir/openqasm/adapted/${{ matrix.source_file }}.qasm

  simulation-base:
    needs: hardware-adaptation
    runs-on: ubuntu-latest
    strategy:
      matrix:
        source_file: ${{ fromJson(needs.setup.outputs.source_files) }}
    steps:
      - uses: actions/checkout@v4
      - run: pip install quantum-cli-sdk
      - run: mkdir -p results/simulation/base
      - run: quantum-cli run simulate ir/openqasm/${{ matrix.source_file }}.qasm --backend qiskit --output results/simulation/base/${{ matrix.source_file }}.json --shots 1024

  simulation-optimized:
    needs: simulation-base
    runs-on: ubuntu-latest
    strategy:
      matrix:
        source_file: ${{ fromJson(needs.setup.outputs.source_files) }}
    steps:
      - uses: actions/checkout@v4
      - run: pip install quantum-cli-sdk
      - run: mkdir -p results/simulation/optimized
      - run: quantum-cli run simulate ir/openqasm/optimized/${{ matrix.source_file }}.qasm --backend qiskit --output results/simulation/optimized/${{ matrix.source_file }}.json --shots 1024

  error-mitigation:
    needs: simulation-optimized
    runs-on: ubuntu-latest
    strategy:
      matrix:
        source_file: ${{ fromJson(needs.setup.outputs.source_files) }}
    steps:
      - uses: actions/checkout@v4
      - run: pip install quantum-cli-sdk
      - run: mkdir -p ir/openqasm/mitigated
      - run: quantum-cli ir mitigate ir/openqasm/optimized/${{ matrix.source_file }}.qasm --output ir/openqasm/mitigated/${{ matrix.source_file }}.qasm

  simulation-mitigated:
    needs: error-mitigation
    runs-on: ubuntu-latest
    strategy:
      matrix:
        source_file: ${{ fromJson(needs.setup.outputs.source_files) }}
    steps:
      - uses: actions/checkout@v4
      - run: pip install quantum-cli-sdk
      - run: mkdir -p results/simulation/mitigated
      - run: quantum-cli run simulate ir/openqasm/mitigated/${{ matrix.source_file }}.qasm --backend qiskit --output results/simulation/mitigated/${{ matrix.source_file }}.json --shots 1024

  resource-cost-estimation:
    needs: simulation-mitigated
    runs-on: ubuntu-latest
    strategy:
      matrix:
        source_file: ${{ fromJson(needs.setup.outputs.source_files) }}
    steps:
      - uses: actions/checkout@v4
      - run: pip install quantum-cli-sdk
      - run: mkdir -p results/resource-estimation
      - run: quantum-cli analyze resources ir/openqasm/mitigated/${{ matrix.source_file }}.qasm --output results/resource-estimation/${{ matrix.source_file }}.json
      - run: quantum-cli analyze cost ir/openqasm/mitigated/${{ matrix.source_file }}.qasm --output results/resource-estimation/cost-${{ matrix.source_file }}.json

  benchmarking:
    needs: resource-cost-estimation
    runs-on: ubuntu-latest
    strategy:
      matrix:
        source_file: ${{ fromJson(needs.setup.outputs.source_files) }}
    steps:
      - uses: actions/checkout@v4
      - run: pip install quantum-cli-sdk
      - run: mkdir -p results/benchmarking
      - run: quantum-cli analyze benchmark ir/openqasm/mitigated/${{ matrix.source_file }}.qasm --output results/benchmarking/${{ matrix.source_file }}.json

  fine-tuning:
    needs: benchmarking
    runs-on: ubuntu-latest
    strategy:
      matrix:
        source_file: ${{ fromJson(needs.setup.outputs.source_files) }}
    steps:
      - uses: actions/checkout@v4
      - run: pip install quantum-cli-sdk
      - run: mkdir -p results/fine-tuning
      - run: quantum-cli ir finetune ir/openqasm/mitigated/${{ matrix.source_file }}.qasm --output results/fine-tuning/${{ matrix.source_file }}.json

  test-generation-execution:
    needs: fine-tuning
    runs-on: ubuntu-latest
    strategy:
        matrix:
         source_file: ${{ fromJson(needs.setup.outputs.source_files) }}
    steps:
        - uses: actions/checkout@v4
        - run: pip install quantum-cli-sdk pytest
        - run: mkdir -p tests/generated
        - run: quantum-cli test generate ir/openqasm/mitigated/${{ matrix.source_file }}.qasm --output tests/generated/test_${{ matrix.source_file }}.py
        - run: pytest tests/generated/test_${{ matrix.source_file }}.py

  microservice-generation-testing:
    needs: test-generation-execution
    runs-on: ubuntu-latest
    strategy:
        matrix:
         source_file: ${{ fromJson(needs.setup.outputs.source_files) }}
    steps:
        - uses: actions/checkout@v4
        - uses: docker/setup-buildx-action@v2
        - run: pip install quantum-cli-sdk
        - run: mkdir -p microservice/generated
        - run: quantum-cli service generate ir/openqasm/mitigated/${{ matrix.source_file }}.qasm --output-dir microservice/generated/${{ matrix.source_file }}
        - run: quantum-cli service test-generate microservice/generated/${{ matrix.source_file }} --output microservice/generated/${{ matrix.source_file }}/tests
        - run: quantum-cli service test-run microservice/generated/${{ matrix.source_file }} --test-dir microservice/generated/${{ matrix.source_file }}/tests --output results/microservice-tests/${{ matrix.source_file }}.json

  application-packaging:
    needs: microservice-generation-testing
    runs-on: ubuntu-latest
    strategy:
        matrix:
         source_file: ${{ fromJson(needs.setup.outputs.source_files) }}
    steps:
        - uses: actions/checkout@v4
        - run: pip install quantum-cli-sdk
        - run: mkdir -p dist
        - run: quantum-cli package create \
                --source-dir microservice/generated/${{ matrix.source_file }} \
                --circuit-file ir/openqasm/mitigated/${{ matrix.source_file }}.qasm \
                --metadata-file results/resource-estimation/${{ matrix.source_file }}.json \
                --output-path dist/${{ matrix.source_file }}.zip

  publish-to-quantum-hub:
    needs: application-packaging
    runs-on: ubuntu-latest
    strategy:
        matrix:
         source_file: ${{ fromJson(needs.setup.outputs.source_files) }}
    env:
        QUANTUM_HUB_USERNAME: ${{ secrets.QUANTUM_HUB_USERNAME }}
        QUANTUM_HUB_TOKEN: ${{ secrets.QUANTUM_HUB_TOKEN }}
    steps:
        - uses: actions/checkout@v4
        - run: pip install quantum-cli-sdk
        - run: |
            if [ -z "${QUANTUM_HUB_USERNAME}" ] || [ -z "${QUANTUM_HUB_TOKEN}" ]; then
            echo "Quantum Hub credentials missing. Skipping publish step."
            exit 1
            fi
            quantum-cli hub publish dist/${{ matrix.source_file }}.zip \
            --username "${QUANTUM_HUB_USERNAME}" \
            --token "${QUANTUM_HUB_TOKEN}"
        
