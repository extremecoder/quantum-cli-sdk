name: Quantum Project Package & Publish

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 1.0.0)'
        required: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest build twine setuptools wheel
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Run tests
      run: |
        pytest
    
    - name: Build package
      run: |
        python -m build
    
    - name: Store built packages
      uses: actions/upload-artifact@v3
      with:
        name: packages
        path: dist/
  
  publish-to-registry:
    needs: build-and-test
    if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    
    steps:
    - name: Download built packages
      uses: actions/download-artifact@v3
      with:
        name: packages
        path: dist/
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install publishing tools
      run: |
        python -m pip install --upgrade pip
        pip install twine
    
    - name: Publish to PyPI
      if: github.event_name == 'release'
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload dist/*
    
    - name: Publish to Quantum Registry (Custom)
      env:
        QUANTUM_REGISTRY_TOKEN: ${{ secrets.QUANTUM_REGISTRY_TOKEN }}
        QUANTUM_REGISTRY_URL: ${{ secrets.QUANTUM_REGISTRY_URL }}
      run: |
        echo "Publishing to Quantum Registry at $QUANTUM_REGISTRY_URL"
        # In a real implementation, this would use the quantum-cli-sdk to publish
        python -c "
        import os
        import requests
        
        url = os.environ.get('QUANTUM_REGISTRY_URL', 'https://registry.example.com/api/publish')
        token = os.environ.get('QUANTUM_REGISTRY_TOKEN', '')
        
        print(f'Publishing package to {url}')
        response = requests.post(
            url,
            headers={'Authorization': f'Bearer {token}'},
            files=[('package', open(f, 'rb')) for f in os.listdir('dist')],
        )
        print(f'Response: {response.status_code} {response.text}')
        "
        
  deploy-docs:
    needs: publish-to-registry
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install mkdocs mkdocs-material
    
    - name: Build documentation
      run: |
        mkdocs build
    
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./site 